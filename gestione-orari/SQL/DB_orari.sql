-- MySQL Script generated by MySQL Workbench
-- Sat Mar 16 16:45:05 2019
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema DB_orari
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `DB_orari` ;

-- -----------------------------------------------------
-- Schema DB_orari
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `DB_orari` DEFAULT CHARACTER SET utf8 ;
USE `DB_orari` ;

-- -----------------------------------------------------
-- Table `DB_orari`.`News`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DB_orari`.`News` (
  `newsID` INT NOT NULL AUTO_INCREMENT,
  `title` VARCHAR(30) NOT NULL,
  `description` VARCHAR(1000) NOT NULL,
  PRIMARY KEY (`newsID`))
ENGINE = InnoDB;
insert into News(newsID, title, description) VALUES (1, 'Prova', 'Funziona tutto');

-- -----------------------------------------------------
-- Table `DB_orari`.`Faculty`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DB_orari`.`Faculty` (
  `facultyID` INT(11) NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `description` VARCHAR(400) NOT NULL,
  `duration` INT(11) NOT NULL,
  PRIMARY KEY (`facultyID`))
ENGINE = InnoDB;
insert into Faculty(facultyID, name, description, duration) VALUES (1, 'Informatica', 'Bello', 3);


-- -----------------------------------------------------
-- Table `DB_orari`.`Course`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DB_orari`.`Course` (
  `courseID` INT(14) NOT NULL,
  `facultyID` INT(11) NULL,
  `name` VARCHAR(45) NOT NULL,
  `description` VARCHAR(45) NOT NULL,
  `year` VARCHAR(45) NOT NULL,
  INDEX `facultyID_idx` (`facultyID` ASC),
  PRIMARY KEY (`courseID`),
  CONSTRAINT `facultyID`
    FOREIGN KEY (`facultyID`)
    REFERENCES `DB_orari`.`Faculty` (`facultyID`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;
insert into Course(courseID, facultyID, name, description, year) VALUES (1, 1, 'Ingegneria del sw', 'Bello', 'terzo');

-- -----------------------------------------------------
-- Table `DB_orari`.`Person`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DB_orari`.`Person` (
  `personID` INT(11) NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `surname` VARCHAR(45) NOT NULL,
  `telephone` BIGINT(14) NOT NULL,
  `email` VARCHAR(100) NOT NULL,
  `groupID` INT NOT NULL,
  INDEX `fk_ruolo_idx` (`groupID` ASC),
  PRIMARY KEY (`personID`),
  CONSTRAINT `fk_Group`
    FOREIGN KEY (`groupID`)
    REFERENCES `DB_orari`.`Group` (`groupID`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;

insert into Person(personID, name, surname, telephone, email, groupID) VALUES (124535,'ludovico','genoveffo', 3381234354, 'ludovico.genoveffo@gmail.com',1);
insert into Person(personID, name, surname, telephone, email, groupID) VALUES (120035,'mauro','fibra', 3352378354,'ludovico.genoveffo@gmail.com',2);
insert into Person(personID, name, surname, telephone, email, groupID) VALUES (124123,'tina','tatangelo', 3381967954,'ludovico.genoveffo@gmail.com', 3);

  -- -----------------------------------------------------
-- Table `DB_orari`.`Resource`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DB_orari`.`Resource` (
  `resourceID` INT(40) NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `description` VARCHAR(45) NOT NULL,
  `type` VARCHAR(15) NULL,
  PRIMARY KEY (`resourceID`))
ENGINE = InnoDB;
insert into Resource(resourceID, name, description, type) VALUES (1, 'proiettore', 'proiettore', 'proiettore');


-- -----------------------------------------------------
-- Table `DB_orari`.`Classroom`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DB_orari`.`Classroom` (
  `classroomID` INT(11) NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `capacity` INT NOT NULL,
  PRIMARY KEY (`classroomID`))
ENGINE = InnoDB;
insert into Classroom(classroomID, name, capacity) VALUES (1, 'U2-02', 180);

-- -----------------------------------------------------
-- Table `DB_orari`.`Exam`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DB_orari`.`Exam` (
  `examID` INT(11) NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `start` DATETIME NOT NULL,
  `end` DATETIME NOT NULL,
  `enrolled` INT(5) NULL,
  `courseID` INT(14) NOT NULL,
  `professorID` INT(11) NOT NULL,
  PRIMARY KEY (`examID`),
  INDEX `professorIDFk_idx` (`professorID` ASC),
  INDEX `courseID_FK_course_idx` (`courseID` ASC),
  CONSTRAINT `courseID_FK_course`
    FOREIGN KEY (`courseID`)
    REFERENCES `DB_orari`.`course` (`courseID`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT `professorID_fk_Person`
    FOREIGN KEY (`professorID`)
    REFERENCES `DB_orari`.`Person` (`personID`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;
insert into Exam(examID, name, start, end, enrolled, courseID, professorID) VALUES (1,'Ingegneria del SW', '2019-06-08-00.00', '2019-06-08-01.00', 12, 1, 1);


-- -----------------------------------------------------
-- Table `DB_orari`.`ExamEnrollment`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DB_orari`.`ExamEnrollment` (
  `ExamEnrollmentID` INT NOT NULL AUTO_INCREMENT,
  `examID` INT(11) NOT NULL,
  `date` DATETIME NOT NULL,
  `studentID` INT(11) NOT NULL,
  `expirationDate` DATETIME NOT NULL,
  `note` VARCHAR(45) NULL,
  PRIMARY KEY (`ExamEnrollmentID`),
  INDEX `examID_idx` (`examID` ASC),
  INDEX `studentIDFk_idx` (`studentID` ASC),
  CONSTRAINT `studentIDFkPerson`
    FOREIGN KEY (`studentID`)
    REFERENCES `DB_orari`.`Person` (`personID`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT `examIDFkExam`
    FOREIGN KEY (`examID`)
    REFERENCES `DB_orari`.`Exam` (`examID`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;
insert into ExamEnrollment(ExamEnrollmentID, examID, date, studentID, expirationDate, note) VALUES (1, 1, '2019-06-08-00.00', 785154, '2019-06-08-01.00', 'ciao');


-- -----------------------------------------------------
-- Table `DB_orari`.`ClassroomCourse`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DB_orari`.`ClassroomCourse` (
  `ClassroomCourseID` INT(11) NOT NULL,
  `classroomID` INT(11) NOT NULL,
  `courseID` INT(11) NOT NULL,
  INDEX `fkcourseID_idx` (`courseID` ASC),
  PRIMARY KEY (`ClassroomCourseID`),
  CONSTRAINT `fkclassroomID`
    FOREIGN KEY (`classroomID`)
    REFERENCES `DB_orari`.`Classroom` (`classroomID`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT `fkcourseID`
    FOREIGN KEY (`courseID`)
    REFERENCES `DB_orari`.`Course` (`courseID`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;
insert into ClassroomCourse(ClassroomCourseID, classroomID, courseID) VALUES (1, 1, 1);


-- -----------------------------------------------------
-- Table `DB_orari`.`ClassroomExam`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DB_orari`.`ClassroomExam` (
  `classroomexamID` INT NOT NULL AUTO_INCREMENT,
  `classroomID` INT(11) NOT NULL,
  `examID` INT(11) NOT NULL,
  INDEX `fkclassroomID_idx` (`classroomID` ASC),
  INDEX `fkexamID_idx` (`examID` ASC),
  PRIMARY KEY (`classroomexamID`),
  CONSTRAINT `classroomIDFk4`
    FOREIGN KEY (`classroomID`)
    REFERENCES `DB_orari`.`Classroom` (`classroomID`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT `examIDFk4`
    FOREIGN KEY (`examID`)
    REFERENCES `DB_orari`.`Exam` (`examID`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;
insert into ClassroomExam(classroomexamID, classroomID, examID) VALUES (1, 1, 1);


-- -----------------------------------------------------
-- Table `DB_orari`.`ProfessorCourse`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DB_orari`.`ProfessorCourse` (
  `professorCourseID` INT(11) NOT NULL,
  `professorID` INT(11) NOT NULL,
  `courseID` INT(14) NOT NULL,
  INDEX `courseID_idx` (`courseID` ASC),
  PRIMARY KEY (`professorCourseID`),
  INDEX `professorIDFk5_idx` (`professorID` ASC),
  CONSTRAINT `professorIDFk5`
    FOREIGN KEY (`professorID`)
    REFERENCES `DB_orari`.`Person` (`personID`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT `courseIDFk5`
    FOREIGN KEY (`courseID`)
    REFERENCES `DB_orari`.`course` (`courseID`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;
insert into ProfessorCourse(professorCourseID, professorID, courseID) VALUES (1, 1, 1);

-- -----------------------------------------------------
-- Table `DB_orari`.`ResourceBooking`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DB_orari`.`ResourceBooking` (
  `resourceBookingID` INT NOT NULL AUTO_INCREMENT,
  `fromDateDate` DATETIME NOT NULL,
  `toDate` DATETIME NOT NULL,
  `resourceID` INT(40) NOT NULL,
  `personID` INT(11) NOT NULL,
  INDEX `personID0_idx` (`personID` ASC),
  PRIMARY KEY (`resourceBookingID`),
  CONSTRAINT `personID0`
    FOREIGN KEY (`personID`)
    REFERENCES `DB_orari`.`Person` (`personID`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT `resourceID`
    FOREIGN KEY (`resourceID`)
    REFERENCES `DB_orari`.`Resource` (`resourceID`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;
insert into ResourceBooking(resourceBookingID, fromDateDate, toDate, resourceID, personID) VALUES (1, '2019-06-08-00.00', '2019-06-08-01.00', 1, 1);


-- -----------------------------------------------------
-- Table `DB_orari`.`Calendar`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DB_orari`.`Calendar` (
  `calendarID` INT NOT NULL AUTO_INCREMENT,
  `year` VARCHAR(45) NOT NULL,
  `begin` DATETIME NOT NULL,
  `end` DATETIME NOT NULL,
  PRIMARY KEY (`calendarID`))
ENGINE = InnoDB;
insert into Calendar(year, begin, end) VALUES ('secondo', '2020-06-08-01.00', '2021-06-08-01.00');
insert into Calendar(year, begin, end) VALUES ('terzo', '2022-06-08-01.00', '2023-06-08-01.00');


-- -----------------------------------------------------
-- Table `DB_orari`.`Timetable`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DB_orari`.`Timetable` (
  `timetableID` INT NOT NULL AUTO_INCREMENT,
  `courseID` INT(11) NOT NULL,
  `fromDate` DATETIME NOT NULL,
  `toDate` DATETIME NOT NULL,
  PRIMARY KEY (`timetableID`),
  INDEX `fkcourseID_idx` (`courseID` ASC),
  CONSTRAINT `fkcourseID6`
    FOREIGN KEY (`courseID`)
    REFERENCES `DB_orari`.`Course` (`courseID`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;
insert into Timetable(timetableID, courseID, fromDate, toDate) VALUES (1, 1, '2020-06-08-00.00', '2021-06-08-01.00');

-- -----------------------------------------------------
-- Table `DB_orari`.`LogIn`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DB_orari`.`LogIn` (
  `username` VARCHAR(45) NOT NULL,
  `password` VARCHAR(45) NOT NULL,
  `personID` INT(11) NOT NULL,
  PRIMARY KEY (`username`),
  INDEX `fk_id_idx` (`personID` ASC),
  CONSTRAINT `fk_id`
    FOREIGN KEY (`personID`)
    REFERENCES `DB_orari`.`Person` (`personID`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;
insert into LogIn(username, password, personID) VALUES ('DB_orari', 'DB_orari', 1);


-- -----------------------------------------------------
-- Table `DB_orari`.`GestioneCalendario`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DB_orari`.`GestioneCalendario` (
  `intGestioneCalendario` INT NOT NULL AUTO_INCREMENT,
  `idGestioneCalendario` INT NOT NULL,
  `personID` INT NOT NULL,
  INDEX `personID_fk_idx` (`personID` ASC),
  PRIMARY KEY (`intGestioneCalendario`),
  CONSTRAINT `personID_fk`
    FOREIGN KEY (`personID`)
    REFERENCES `DB_orari`.`Person` (`personID`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT `calendarIDio_fk`
    FOREIGN KEY (`idGestioneCalendario`)
    REFERENCES `DB_orari`.`Calendar` (`calendarID`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;
insert into GestioneCalendario(intGestioneCalendario, idGestioneCalendario, personID) VALUES (1, 1, 1);


-- -----------------------------------------------------
-- Table `DB_orari`.`GestioneOrario`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DB_orari`.`GestioneOrario` (
  `idGstioneOrario` INT NOT NULL AUTO_INCREMENT,
  `idGestioneOrario` INT NOT NULL,
  `idSegretario` INT NOT NULL,
  INDEX `idOrario_fk_idx` (`idGestioneOrario` ASC),
  INDEX `idSegretario_fk_idx` (`idSegretario` ASC),
  PRIMARY KEY (`idGstioneOrario`),
  CONSTRAINT `idSegretario_fk`
    FOREIGN KEY (`idSegretario`)
    REFERENCES `DB_orari`.`Person` (`personID`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT `idOrario_fk`
    FOREIGN KEY (`idGestioneOrario`)
    REFERENCES `DB_orari`.`Timetable` (`timetableID`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;
insert into GestioneOrario(idGstioneOrario, idGestioneOrario, idSegretario) VALUES (1, 1, 1);


SET SQL_MODE = @OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS = @OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS = @OLD_UNIQUE_CHECKS;
